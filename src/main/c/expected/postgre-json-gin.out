set client_min_messages to 'error';
drop extension if exists "postgre-json-functions";
create extension "postgre-json-functions";
set client_min_messages to 'notice';
\t on
\pset format unaligned
-- t
select array['foo', 'bar', 'baz'] @> array['foo'];
t
-- t
select array['foo', 'bar', 'baz'] @> array['foo', 'bar'];
t
-- t
select array['foo', 'bar', 'baz'] @> array['baz', 'foo'];
t
-- f
select array['foo', 'bar', 'baz'] @> array['qux'];
f
-- t
select array['foo', 'bar', 'baz'] @> array[]::text[];
t
-- t
select array[]::text[] @> array[]::text[];
t
-- f
select array[]::text[] @> array['qux'];
f
-- t
select array['foo', 'bar', 'baz'] @@> array['foo'];
t
-- t
select array['foo', 'bar', 'baz'] @@> array['foo', 'bar'];
t
-- t
select array['foo', 'bar', 'baz'] @@> array['baz', 'foo'];
t
-- f
select array['foo', 'bar', 'baz'] @@> array['qux'];
f
-- t
select array['foo', 'bar', 'baz'] @@> array[]::text[];
t
-- t
select array[]::text[] @> array[]::text[];
t
-- f
select array[]::text[] @> array['qux'];
f
-- t
select array['foo', 'bar', 'baz'] @@> array['fo'];
t
-- t
select array['foo', 'bar', 'baz'] @@> array['ba'];
t
-- t
select array['foo', 'bar', 'baz'] @@> array['b'];
t
-- t
select array['foo', 'bar', 'baz'] @@> array[''];
t
-- f
select array['foo', 'bar', 'baz'] @@> array['baq'];
f
-- t
select array['foo', 'foobar', 'baz'] @@> array['foo'];
t
\t off
\pset format aligned
